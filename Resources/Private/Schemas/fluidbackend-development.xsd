<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://typo3.org/ns/fluidbackend/ViewHelpers"><xsd:element name="form"><xsd:annotation><xsd:documentation><![CDATA[## Main form rendering ViewHelper Used in Fluidbackend page templates to render the form, inserted at the location of this tag.]]></xsd:documentation></xsd:annotation><xsd:complexType mixed="true"><xsd:sequence><xsd:any minOccurs="0" maxOccurs="1"/></xsd:sequence><xsd:attribute type="xsd:array" name="additionalAttributes" default="NULL" php:type="array"><xsd:annotation><xsd:documentation><![CDATA[Additional tag attributes. They will be added directly to the resulting HTML tag.]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="enctype" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[MIME type with which the form is submitted]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="method" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Transfer type (GET or POST)]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="name" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Name of form]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="onreset" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[JavaScript: On reset of the form]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="onsubmit" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[JavaScript: On submit of the form]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="class" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[CSS class(es) for this element]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="dir" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Text direction for this HTML element. Allowed strings: "ltr" (left to right), "rtl" (right to left)]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="id" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Unique (in this file) identifier for this HTML element.]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="lang" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Language for this element. Use short names specified in RFC 1766]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="style" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Individual CSS styles for this element]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="title" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Tooltip text of element]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="accesskey" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Keyboard shortcut to access this element]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:integer" name="tabindex" default="NULL" php:type="integer"><xsd:annotation><xsd:documentation><![CDATA[Specifies the tab order of this element]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="onclick" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[JavaScript evaluated for the onclick event]]></xsd:documentation></xsd:annotation></xsd:attribute></xsd:complexType></xsd:element><xsd:element name="form"><xsd:annotation><xsd:documentation><![CDATA[## Main form rendering ViewHelper Used in Fluidbackend page templates to render the form, inserted at the location of this tag.]]></xsd:documentation></xsd:annotation><xsd:complexType mixed="true"><xsd:sequence><xsd:any minOccurs="0" maxOccurs="1"/></xsd:sequence><xsd:attribute type="xsd:array" name="additionalAttributes" default="NULL" php:type="array"><xsd:annotation><xsd:documentation><![CDATA[Additional tag attributes. They will be added directly to the resulting HTML tag.]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="enctype" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[MIME type with which the form is submitted]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="method" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Transfer type (GET or POST)]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="name" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Name of form]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="onreset" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[JavaScript: On reset of the form]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="onsubmit" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[JavaScript: On submit of the form]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="class" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[CSS class(es) for this element]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="dir" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Text direction for this HTML element. Allowed strings: "ltr" (left to right), "rtl" (right to left)]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="id" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Unique (in this file) identifier for this HTML element.]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="lang" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Language for this element. Use short names specified in RFC 1766]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="style" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Individual CSS styles for this element]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="title" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Tooltip text of element]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="accesskey" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Keyboard shortcut to access this element]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:integer" name="tabindex" default="NULL" php:type="integer"><xsd:annotation><xsd:documentation><![CDATA[Specifies the tab order of this element]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="onclick" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[JavaScript evaluated for the onclick event]]></xsd:documentation></xsd:annotation></xsd:attribute></xsd:complexType></xsd:element><xsd:element name="form"><xsd:annotation><xsd:documentation><![CDATA[## Main form rendering ViewHelper Used in Fluidbackend page templates to render the form, inserted at the location of this tag.]]></xsd:documentation></xsd:annotation><xsd:complexType mixed="true"><xsd:sequence><xsd:any minOccurs="0" maxOccurs="1"/></xsd:sequence><xsd:attribute type="xsd:array" name="additionalAttributes" default="NULL" php:type="array"><xsd:annotation><xsd:documentation><![CDATA[Additional tag attributes. They will be added directly to the resulting HTML tag.]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="enctype" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[MIME type with which the form is submitted]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="method" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Transfer type (GET or POST)]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="name" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Name of form]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="onreset" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[JavaScript: On reset of the form]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="onsubmit" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[JavaScript: On submit of the form]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="class" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[CSS class(es) for this element]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="dir" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Text direction for this HTML element. Allowed strings: "ltr" (left to right), "rtl" (right to left)]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="id" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Unique (in this file) identifier for this HTML element.]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="lang" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Language for this element. Use short names specified in RFC 1766]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="style" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Individual CSS styles for this element]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="title" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Tooltip text of element]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="accesskey" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Keyboard shortcut to access this element]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:integer" name="tabindex" default="NULL" php:type="integer"><xsd:annotation><xsd:documentation><![CDATA[Specifies the tab order of this element]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="onclick" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[JavaScript evaluated for the onclick event]]></xsd:documentation></xsd:annotation></xsd:attribute></xsd:complexType></xsd:element><xsd:element name="form"><xsd:annotation><xsd:documentation><![CDATA[## Main form rendering ViewHelper Used in Fluidbackend page templates to render the form, inserted at the location of this tag.]]></xsd:documentation></xsd:annotation><xsd:complexType mixed="true"><xsd:sequence><xsd:any minOccurs="0" maxOccurs="1"/></xsd:sequence><xsd:attribute type="xsd:array" name="additionalAttributes" default="NULL" php:type="array"><xsd:annotation><xsd:documentation><![CDATA[Additional tag attributes. They will be added directly to the resulting HTML tag.]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="enctype" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[MIME type with which the form is submitted]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="method" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Transfer type (GET or POST)]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="name" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Name of form]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="onreset" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[JavaScript: On reset of the form]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="onsubmit" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[JavaScript: On submit of the form]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="class" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[CSS class(es) for this element]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="dir" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Text direction for this HTML element. Allowed strings: "ltr" (left to right), "rtl" (right to left)]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="id" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Unique (in this file) identifier for this HTML element.]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="lang" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Language for this element. Use short names specified in RFC 1766]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="style" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Individual CSS styles for this element]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="title" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Tooltip text of element]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="accesskey" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Keyboard shortcut to access this element]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:integer" name="tabindex" default="NULL" php:type="integer"><xsd:annotation><xsd:documentation><![CDATA[Specifies the tab order of this element]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="onclick" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[JavaScript evaluated for the onclick event]]></xsd:documentation></xsd:annotation></xsd:attribute></xsd:complexType></xsd:element><xsd:element name="module"><xsd:annotation><xsd:documentation><![CDATA[### Module configuration VieWHelper Sets various aspects of how this module should be integrated. Use inside flux:flexform to configure the module contained within the Flux form.]]></xsd:documentation></xsd:annotation><xsd:complexType mixed="true"><xsd:sequence><xsd:any minOccurs="0" maxOccurs="1"/></xsd:sequence><xsd:attribute type="xsd:string" name="group" default="'web'" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Parent module, for example "web" or "info" - or your own custom module name, in which case the module is added after the module indicated in the "after" attribute]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="position" default="'bottom'" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Name of the (parent-level) group after which the group used by this module should be added - fx "top", "after:help" or "before:web"]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:boolean" name="navigation" default="true" php:type="boolean"><xsd:annotation><xsd:documentation><![CDATA[If FALSE, suppresses uses of the page tree navigation component]]></xsd:documentation></xsd:annotation></xsd:attribute></xsd:complexType></xsd:element><xsd:element name="module"><xsd:annotation><xsd:documentation><![CDATA[### Module configuration VieWHelper Sets various aspects of how this module should be integrated. Use inside flux:flexform to configure the module contained within the Flux form.]]></xsd:documentation></xsd:annotation><xsd:complexType mixed="true"><xsd:sequence><xsd:any minOccurs="0" maxOccurs="1"/></xsd:sequence><xsd:attribute type="xsd:string" name="group" default="'web'" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Parent module, for example "web" or "info" - or your own custom module name, in which case the module is added after the module indicated in the "after" attribute]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="position" default="'bottom'" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Name of the (parent-level) group after which the group used by this module should be added - fx "top", "after:help" or "before:web"]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:boolean" name="navigation" default="true" php:type="boolean"><xsd:annotation><xsd:documentation><![CDATA[If FALSE, suppresses uses of the page tree navigation component]]></xsd:documentation></xsd:annotation></xsd:attribute></xsd:complexType></xsd:element><xsd:element name="outlet.controller"><xsd:annotation><xsd:documentation><![CDATA[### Controller Outlet Definition ViewHelper Defines one data Outlet which uses an Extbase controller to process the posted data. The controller action and extension name affinity can be set, but the controller name itself is always "Backend". #### Example     <be:outlet.controller action="doStuff" extensionName="MyExtension" arguments="{0: 'foo', 1: 'bar'}" /> Would call:     $arg1 = $arguments[0]; // string "foo"     $arg2 = $arguments[1]; // string "bar"     Tx_MyExtension_Controller_BackendController->doStuff($settings, $arg1, $arg2); Where naturally, $settings is the array result of posting the form data. #### Advanced example If you change the type of the first argument on the action called on your controller, the data will be first transformed to match the desired type - using Extbase argument transformations. Which means that if you want to use for example a model object to store the posted data, simply tell Extbase that the first argument is not an array but an instance of the desired model class. Extbase will then construct a (not yet persisted) version of that model object. #### Multiple controllers It is possible to have multiple controller Outlets with any number of different argument types - for example controller Outlet A might save one Domain record type while Outlet B might want another type - or simply use a standard array.]]></xsd:documentation></xsd:annotation><xsd:complexType mixed="true"><xsd:sequence><xsd:any minOccurs="0" maxOccurs="1"/></xsd:sequence><xsd:attribute type="xsd:string" name="name" default="NULL" php:type="string" use="required"><xsd:annotation><xsd:documentation><![CDATA[Name of the outlet - use only lowerCamelCase values]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="label" default="NULL" php:type="string" use="required"><xsd:annotation><xsd:documentation><![CDATA[Label of the outlet - any human-readable value allowed]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:boolean" name="enabled" default="false" php:type="boolean"><xsd:annotation><xsd:documentation><![CDATA[If FALSE, disables this Outlet]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="action" default="'save'" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Name of controller action, excluding the "Action" part - for example "save" (which is the default action to use)]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="controller" default="'Backend'" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Name of the controller which should be called, defaults to "Backend"]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="extensionName" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Name of the extension, in UpperCamelCase, which contains the controller class. If not specified this is read from the rendering context (which uses your extension scope)]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:array" name="arguments" default="array (&#10;)" php:type="array"><xsd:annotation><xsd:documentation><![CDATA[Optional array of arguments passed, in addition to the non-optional first argument (array $settings) - i.e. these arguments are used as no. 2, 3, 4 etc.]]></xsd:documentation></xsd:annotation></xsd:attribute></xsd:complexType></xsd:element><xsd:element name="outlet.controller"><xsd:annotation><xsd:documentation><![CDATA[### Controller Outlet Definition ViewHelper Defines one data Outlet which uses an Extbase controller to process the posted data. The controller action and extension name affinity can be set, but the controller name itself is always "Backend". #### Example     <be:outlet.controller action="doStuff" extensionName="MyExtension" arguments="{0: 'foo', 1: 'bar'}" /> Would call:     $arg1 = $arguments[0]; // string "foo"     $arg2 = $arguments[1]; // string "bar"     Tx_MyExtension_Controller_BackendController->doStuff($settings, $arg1, $arg2); Where naturally, $settings is the array result of posting the form data. #### Advanced example If you change the type of the first argument on the action called on your controller, the data will be first transformed to match the desired type - using Extbase argument transformations. Which means that if you want to use for example a model object to store the posted data, simply tell Extbase that the first argument is not an array but an instance of the desired model class. Extbase will then construct a (not yet persisted) version of that model object. #### Multiple controllers It is possible to have multiple controller Outlets with any number of different argument types - for example controller Outlet A might save one Domain record type while Outlet B might want another type - or simply use a standard array.]]></xsd:documentation></xsd:annotation><xsd:complexType mixed="true"><xsd:sequence><xsd:any minOccurs="0" maxOccurs="1"/></xsd:sequence><xsd:attribute type="xsd:string" name="name" default="NULL" php:type="string" use="required"><xsd:annotation><xsd:documentation><![CDATA[Name of the outlet - use only lowerCamelCase values]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="label" default="NULL" php:type="string" use="required"><xsd:annotation><xsd:documentation><![CDATA[Label of the outlet - any human-readable value allowed]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:boolean" name="enabled" default="false" php:type="boolean"><xsd:annotation><xsd:documentation><![CDATA[If FALSE, disables this Outlet]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="action" default="'save'" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Name of controller action, excluding the "Action" part - for example "save" (which is the default action to use)]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="controller" default="'Backend'" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Name of the controller which should be called, defaults to "Backend"]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="extensionName" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Name of the extension, in UpperCamelCase, which contains the controller class. If not specified this is read from the rendering context (which uses your extension scope)]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:array" name="arguments" default="array (&#10;)" php:type="array"><xsd:annotation><xsd:documentation><![CDATA[Optional array of arguments passed, in addition to the non-optional first argument (array $settings) - i.e. these arguments are used as no. 2, 3, 4 etc.]]></xsd:documentation></xsd:annotation></xsd:attribute></xsd:complexType></xsd:element><xsd:element name="outlet.controller"><xsd:annotation><xsd:documentation><![CDATA[### Controller Outlet Definition ViewHelper Defines one data Outlet which uses an Extbase controller to process the posted data. The controller action and extension name affinity can be set, but the controller name itself is always "Backend". #### Example     <be:outlet.controller action="doStuff" extensionName="MyExtension" arguments="{0: 'foo', 1: 'bar'}" /> Would call:     $arg1 = $arguments[0]; // string "foo"     $arg2 = $arguments[1]; // string "bar"     Tx_MyExtension_Controller_BackendController->doStuff($settings, $arg1, $arg2); Where naturally, $settings is the array result of posting the form data. #### Advanced example If you change the type of the first argument on the action called on your controller, the data will be first transformed to match the desired type - using Extbase argument transformations. Which means that if you want to use for example a model object to store the posted data, simply tell Extbase that the first argument is not an array but an instance of the desired model class. Extbase will then construct a (not yet persisted) version of that model object. #### Multiple controllers It is possible to have multiple controller Outlets with any number of different argument types - for example controller Outlet A might save one Domain record type while Outlet B might want another type - or simply use a standard array.]]></xsd:documentation></xsd:annotation><xsd:complexType mixed="true"><xsd:sequence><xsd:any minOccurs="0" maxOccurs="1"/></xsd:sequence><xsd:attribute type="xsd:string" name="name" default="NULL" php:type="string" use="required"><xsd:annotation><xsd:documentation><![CDATA[Name of the outlet - use only lowerCamelCase values]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="label" default="NULL" php:type="string" use="required"><xsd:annotation><xsd:documentation><![CDATA[Label of the outlet - any human-readable value allowed]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:boolean" name="enabled" default="false" php:type="boolean"><xsd:annotation><xsd:documentation><![CDATA[If FALSE, disables this Outlet]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="action" default="'save'" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Name of controller action, excluding the "Action" part - for example "save" (which is the default action to use)]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="controller" default="'Backend'" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Name of the controller which should be called, defaults to "Backend"]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="extensionName" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[Name of the extension, in UpperCamelCase, which contains the controller class. If not specified this is read from the rendering context (which uses your extension scope)]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:array" name="arguments" default="array (&#10;)" php:type="array"><xsd:annotation><xsd:documentation><![CDATA[Optional array of arguments passed, in addition to the non-optional first argument (array $settings) - i.e. these arguments are used as no. 2, 3, 4 etc.]]></xsd:documentation></xsd:annotation></xsd:attribute></xsd:complexType></xsd:element><xsd:element name="outlet.flashMessage"><xsd:annotation><xsd:documentation><![CDATA[## Outlet: Flash Message Produces information about the output as a standard TYPO3 FlashMessage.]]></xsd:documentation></xsd:annotation><xsd:complexType mixed="true"><xsd:sequence><xsd:any minOccurs="0" maxOccurs="1"/></xsd:sequence><xsd:attribute type="xsd:string" name="name" default="NULL" php:type="string" use="required"><xsd:annotation><xsd:documentation><![CDATA[Name of the outlet - use only lowerCamelCase values]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="label" default="NULL" php:type="string" use="required"><xsd:annotation><xsd:documentation><![CDATA[Label of the outlet - any human-readable value allowed]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:boolean" name="enabled" default="false" php:type="boolean"><xsd:annotation><xsd:documentation><![CDATA[If FALSE, disables this Outlet]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:integer" name="severity" default="0" php:type="integer"><xsd:annotation><xsd:documentation><![CDATA[Optional severity / log level - defaults to t3lib_FlashMessage::OK]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:boolean" name="storeInSession" default="true" php:type="boolean"><xsd:annotation><xsd:documentation><![CDATA[If FALSE, only stores the flash message for this page load (which means it MUST be read by for example your data post processors). Default is to save in session.]]></xsd:documentation></xsd:annotation></xsd:attribute></xsd:complexType></xsd:element><xsd:element name="outlet.flashMessage"><xsd:annotation><xsd:documentation><![CDATA[## Outlet: Flash Message Produces information about the output as a standard TYPO3 FlashMessage.]]></xsd:documentation></xsd:annotation><xsd:complexType mixed="true"><xsd:sequence><xsd:any minOccurs="0" maxOccurs="1"/></xsd:sequence><xsd:attribute type="xsd:string" name="name" default="NULL" php:type="string" use="required"><xsd:annotation><xsd:documentation><![CDATA[Name of the outlet - use only lowerCamelCase values]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="label" default="NULL" php:type="string" use="required"><xsd:annotation><xsd:documentation><![CDATA[Label of the outlet - any human-readable value allowed]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:boolean" name="enabled" default="false" php:type="boolean"><xsd:annotation><xsd:documentation><![CDATA[If FALSE, disables this Outlet]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:integer" name="severity" default="0" php:type="integer"><xsd:annotation><xsd:documentation><![CDATA[Optional severity / log level - defaults to t3lib_FlashMessage::OK]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:boolean" name="storeInSession" default="true" php:type="boolean"><xsd:annotation><xsd:documentation><![CDATA[If FALSE, only stores the flash message for this page load (which means it MUST be read by for example your data post processors). Default is to save in session.]]></xsd:documentation></xsd:annotation></xsd:attribute></xsd:complexType></xsd:element><xsd:element name="outlet.flashMessage"><xsd:annotation><xsd:documentation><![CDATA[## Outlet: Flash Message Produces information about the output as a standard TYPO3 FlashMessage.]]></xsd:documentation></xsd:annotation><xsd:complexType mixed="true"><xsd:sequence><xsd:any minOccurs="0" maxOccurs="1"/></xsd:sequence><xsd:attribute type="xsd:string" name="name" default="NULL" php:type="string" use="required"><xsd:annotation><xsd:documentation><![CDATA[Name of the outlet - use only lowerCamelCase values]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="label" default="NULL" php:type="string" use="required"><xsd:annotation><xsd:documentation><![CDATA[Label of the outlet - any human-readable value allowed]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:boolean" name="enabled" default="false" php:type="boolean"><xsd:annotation><xsd:documentation><![CDATA[If FALSE, disables this Outlet]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:integer" name="severity" default="0" php:type="integer"><xsd:annotation><xsd:documentation><![CDATA[Optional severity / log level - defaults to t3lib_FlashMessage::OK]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:boolean" name="storeInSession" default="true" php:type="boolean"><xsd:annotation><xsd:documentation><![CDATA[If FALSE, only stores the flash message for this page load (which means it MUST be read by for example your data post processors). Default is to save in session.]]></xsd:documentation></xsd:annotation></xsd:attribute></xsd:complexType></xsd:element><xsd:element name="outlet.json"><xsd:annotation><xsd:documentation><![CDATA[## Outlet: JSON Outlet Produces JSON data into a specified file.]]></xsd:documentation></xsd:annotation><xsd:complexType mixed="true"><xsd:sequence><xsd:any minOccurs="0" maxOccurs="1"/></xsd:sequence><xsd:attribute type="xsd:string" name="name" default="NULL" php:type="string" use="required"><xsd:annotation><xsd:documentation><![CDATA[Name of the outlet - use only lowerCamelCase values]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="label" default="NULL" php:type="string" use="required"><xsd:annotation><xsd:documentation><![CDATA[Label of the outlet - any human-readable value allowed]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:boolean" name="enabled" default="false" php:type="boolean"><xsd:annotation><xsd:documentation><![CDATA[If FALSE, disables this Outlet]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="path" default="NULL" php:type="string" use="required"><xsd:annotation><xsd:documentation><![CDATA[Path, absolute/relative/EXT:-prefixed, of the desired destination filename]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:boolean" name="preserveHtml" default="true" php:type="boolean"><xsd:annotation><xsd:documentation><![CDATA[If FALSE, does not protect HTML (by using optimal JSON encoding options) in the resulting output - which might break JSON consumers. By default this is switched on.]]></xsd:documentation></xsd:annotation></xsd:attribute></xsd:complexType></xsd:element><xsd:element name="outlet.json"><xsd:annotation><xsd:documentation><![CDATA[## Outlet: JSON Outlet Produces JSON data into a specified file.]]></xsd:documentation></xsd:annotation><xsd:complexType mixed="true"><xsd:sequence><xsd:any minOccurs="0" maxOccurs="1"/></xsd:sequence><xsd:attribute type="xsd:string" name="name" default="NULL" php:type="string" use="required"><xsd:annotation><xsd:documentation><![CDATA[Name of the outlet - use only lowerCamelCase values]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="label" default="NULL" php:type="string" use="required"><xsd:annotation><xsd:documentation><![CDATA[Label of the outlet - any human-readable value allowed]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:boolean" name="enabled" default="false" php:type="boolean"><xsd:annotation><xsd:documentation><![CDATA[If FALSE, disables this Outlet]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="path" default="NULL" php:type="string" use="required"><xsd:annotation><xsd:documentation><![CDATA[Path, absolute/relative/EXT:-prefixed, of the desired destination filename]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:boolean" name="preserveHtml" default="true" php:type="boolean"><xsd:annotation><xsd:documentation><![CDATA[If FALSE, does not protect HTML (by using optimal JSON encoding options) in the resulting output - which might break JSON consumers. By default this is switched on.]]></xsd:documentation></xsd:annotation></xsd:attribute></xsd:complexType></xsd:element><xsd:element name="outlet.json"><xsd:annotation><xsd:documentation><![CDATA[## Outlet: JSON Outlet Produces JSON data into a specified file.]]></xsd:documentation></xsd:annotation><xsd:complexType mixed="true"><xsd:sequence><xsd:any minOccurs="0" maxOccurs="1"/></xsd:sequence><xsd:attribute type="xsd:string" name="name" default="NULL" php:type="string" use="required"><xsd:annotation><xsd:documentation><![CDATA[Name of the outlet - use only lowerCamelCase values]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="label" default="NULL" php:type="string" use="required"><xsd:annotation><xsd:documentation><![CDATA[Label of the outlet - any human-readable value allowed]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:boolean" name="enabled" default="false" php:type="boolean"><xsd:annotation><xsd:documentation><![CDATA[If FALSE, disables this Outlet]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="path" default="NULL" php:type="string" use="required"><xsd:annotation><xsd:documentation><![CDATA[Path, absolute/relative/EXT:-prefixed, of the desired destination filename]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:boolean" name="preserveHtml" default="true" php:type="boolean"><xsd:annotation><xsd:documentation><![CDATA[If FALSE, does not protect HTML (by using optimal JSON encoding options) in the resulting output - which might break JSON consumers. By default this is switched on.]]></xsd:documentation></xsd:annotation></xsd:attribute></xsd:complexType></xsd:element><xsd:element name="outlet.typoScript"><xsd:annotation><xsd:documentation><![CDATA[### Outlet Definition: TypoScript Settings Array Storage Defines a TypoScript target (`sys_template` or file) in in which to store the data posted from the form. The name of the Outlet is used to uniquely identify the TypoScript and the label is used as name (left out when writing files).]]></xsd:documentation></xsd:annotation><xsd:complexType mixed="true"><xsd:sequence><xsd:any minOccurs="0" maxOccurs="1"/></xsd:sequence><xsd:attribute type="xsd:string" name="name" default="NULL" php:type="string" use="required"><xsd:annotation><xsd:documentation><![CDATA[Name of the outlet - use only lowerCamelCase values]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="label" default="NULL" php:type="string" use="required"><xsd:annotation><xsd:documentation><![CDATA[Label of the outlet - any human-readable value allowed]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:boolean" name="enabled" default="false" php:type="boolean"><xsd:annotation><xsd:documentation><![CDATA[If FALSE, disables this Outlet]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:integer" name="storagePid" default="-1" php:type="integer"><xsd:annotation><xsd:documentation><![CDATA[Optional storage PID (if not this current page)]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="path" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[If filled, writes TypoScript to this file (if path is a directory, an automatic setup.txt or constants.txt file is created, depending on $constants). Takes precedence over $storagePid]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:boolean" name="constants" default="false" php:type="boolean"><xsd:annotation><xsd:documentation><![CDATA[If TRUE, writes TypoScript constants instead of setup. Default is to write setup]]></xsd:documentation></xsd:annotation></xsd:attribute></xsd:complexType></xsd:element><xsd:element name="outlet.typoScript"><xsd:annotation><xsd:documentation><![CDATA[### Outlet Definition: TypoScript Settings Array Storage Defines a TypoScript target (`sys_template` or file) in in which to store the data posted from the form. The name of the Outlet is used to uniquely identify the TypoScript and the label is used as name (left out when writing files).]]></xsd:documentation></xsd:annotation><xsd:complexType mixed="true"><xsd:sequence><xsd:any minOccurs="0" maxOccurs="1"/></xsd:sequence><xsd:attribute type="xsd:string" name="name" default="NULL" php:type="string" use="required"><xsd:annotation><xsd:documentation><![CDATA[Name of the outlet - use only lowerCamelCase values]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="label" default="NULL" php:type="string" use="required"><xsd:annotation><xsd:documentation><![CDATA[Label of the outlet - any human-readable value allowed]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:boolean" name="enabled" default="false" php:type="boolean"><xsd:annotation><xsd:documentation><![CDATA[If FALSE, disables this Outlet]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:integer" name="storagePid" default="-1" php:type="integer"><xsd:annotation><xsd:documentation><![CDATA[Optional storage PID (if not this current page)]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="path" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[If filled, writes TypoScript to this file (if path is a directory, an automatic setup.txt or constants.txt file is created, depending on $constants). Takes precedence over $storagePid]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:boolean" name="constants" default="false" php:type="boolean"><xsd:annotation><xsd:documentation><![CDATA[If TRUE, writes TypoScript constants instead of setup. Default is to write setup]]></xsd:documentation></xsd:annotation></xsd:attribute></xsd:complexType></xsd:element><xsd:element name="outlet.typoScript"><xsd:annotation><xsd:documentation><![CDATA[### Outlet Definition: TypoScript Settings Array Storage Defines a TypoScript target (`sys_template` or file) in in which to store the data posted from the form. The name of the Outlet is used to uniquely identify the TypoScript and the label is used as name (left out when writing files).]]></xsd:documentation></xsd:annotation><xsd:complexType mixed="true"><xsd:sequence><xsd:any minOccurs="0" maxOccurs="1"/></xsd:sequence><xsd:attribute type="xsd:string" name="name" default="NULL" php:type="string" use="required"><xsd:annotation><xsd:documentation><![CDATA[Name of the outlet - use only lowerCamelCase values]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="label" default="NULL" php:type="string" use="required"><xsd:annotation><xsd:documentation><![CDATA[Label of the outlet - any human-readable value allowed]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:boolean" name="enabled" default="false" php:type="boolean"><xsd:annotation><xsd:documentation><![CDATA[If FALSE, disables this Outlet]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:integer" name="storagePid" default="-1" php:type="integer"><xsd:annotation><xsd:documentation><![CDATA[Optional storage PID (if not this current page)]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:string" name="path" default="NULL" php:type="string"><xsd:annotation><xsd:documentation><![CDATA[If filled, writes TypoScript to this file (if path is a directory, an automatic setup.txt or constants.txt file is created, depending on $constants). Takes precedence over $storagePid]]></xsd:documentation></xsd:annotation></xsd:attribute><xsd:attribute type="xsd:boolean" name="constants" default="false" php:type="boolean"><xsd:annotation><xsd:documentation><![CDATA[If TRUE, writes TypoScript constants instead of setup. Default is to write setup]]></xsd:documentation></xsd:annotation></xsd:attribute></xsd:complexType></xsd:element></xsd:schema>
